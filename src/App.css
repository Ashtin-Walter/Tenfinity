:root {
  /* Modern color palette */
  --primary-bg: #f8f9fa;       
  --primary-color: #333333;    
  --accent-color: #4d61fc;
  --accent-color-rgb: 77, 97, 252; /* Added RGB values for accent color */     
  --accent-hover: rgba(77,97,252,0.8);
  --secondary-color: #ff7e5f;
  --tertiary-color: #6c63ff;
  --tertiary-color-rgb: 108, 99, 255; /* Added RGB values for tertiary color */
  
  /* Dark mode colors */
  --dark-bg: #121212;
  --dark-secondary: #1e1e1e;
  --dark-text: #ffffff;
  --dark-cell: #2a2a2a;
  
  /* Size variables */
  --cell-size: clamp(20px, 8vw, 40px);
  --cell-size-mobile: 30px;
  --header-height: clamp(60px, 10vh, 100px);
  --grid-size: clamp(300px, 80vw, 600px);
  --cell-size: clamp(25px, calc(var(--grid-size) / 12), 40px);
  --shape-cell-size: clamp(12px, 5vw, 20px);
  --max-game-width: min(95vw, 1200px);
  --min-game-width: min(95vw, 300px);
  --game-padding: clamp(10px, 2vw, 30px);
  --grid-gap: clamp(2px, 0.5vw, 4px);
  --menu-width: clamp(250px, 90vw, 400px);
  
  /* Animation speeds */
  --transition-speed: 0.3s;
  --animation-timing: cubic-bezier(0.175, 0.885, 0.32, 1.275);
  
  /* Shadows and effects */
  --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  --hover-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
  --inner-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.1);
  --text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  --glow-effect: 0 0 15px var(--accent-color);
  --card-bg: rgba(255,255,255,0.1);
  --card-radius: 8px;
  --base-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

/* App.css */
body {
  font-family: 'Inter', 'Segoe UI', 'Helvetica Neue', Arial, sans-serif;
  background: linear-gradient(135deg, #f8f9fa, #e9ecef, #dee2e6);
  background-size: 400% 400%;
  animation: gradientShift 20s ease infinite;
  color: var(--primary-color);
  margin: 0;
  min-height: 100vh;
  min-height: -webkit-fill-available; /* Mobile viewport fix */
  overflow-x: hidden;
  display: flex;
  justify-content: center;
  align-items: flex-start; /* Align App to the top for desktop */
}

.App {
  text-align: center;
  max-width: var(--max-game-width);
  min-width: var(--min-game-width);
  margin: 20px auto; /* Add some margin for desktop view */
  padding: var(--game-padding);
  min-height: calc(100vh - 40px); /* Adjust min-height for desktop */
  display: flex;
  flex-direction: column;
  gap: 1rem;
  overflow-x: hidden;
  background-color: var(--card-bg);
  border-radius: var(--card-radius);
  box-shadow: var(--base-shadow);
  backdrop-filter: blur(8px);
}

/* New header styling for a sleek look */
.app-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1rem; 
  padding: 0.75rem 1rem; 
  border-bottom: 2px solid var(--accent-color);
  margin-bottom: 1rem; 
  height: auto; 
  min-height: var(--header-height);
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border-radius: 12px; 
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.07);
  margin-top: 0.5rem; 
}

.header-left {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.app-header h1 {
  font-size: clamp(1.8rem, 4vw, 2.5rem); 
  margin: 0;
  font-weight: 700; 
  background: linear-gradient(135deg, var(--accent-color), var(--tertiary-color));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: var(--text-shadow);
  letter-spacing: -0.03em;
}

.header-right {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.loader-logo {
  width: 30px; 
  height: 30px; 
  background-color: var(--accent-color);
  margin: 0; 
  position: relative;
  flex-shrink: 0;
}

.gear-icon {
  font-size: 1.8rem; /* Ensure tappable */
  padding: 0.4rem;
  background: transparent;
  border: none;
  color: var(--primary-color);
  cursor: pointer;
  border-radius: 50%;
  transition: background-color 0.2s ease, color 0.2s ease;
  flex-shrink: 0;
}
.dark-mode .gear-icon {
  color: var(--dark-text);
}
.gear-icon:hover {
  background-color: rgba(0,0,0,0.05);
}
.dark-mode .gear-icon:hover {
  background-color: rgba(255,255,255,0.1);
}


.header-score {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-end;
  background: linear-gradient(135deg, var(--accent-color), var(--tertiary-color));
  padding: 0.5rem 1rem;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
  color: white;
  font-weight: bold;
  font-size: 1.2rem;
}

.header-score .score-board {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 1.5rem;
  margin: 0;
  font-size: 1rem;
  padding: 0.5rem 1rem;
  white-space: nowrap;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  backdrop-filter: blur(10px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.header-score .score-board {
  transition: all var(--transition-speed) ease;
}

.header-score .score-board:hover {
  background: rgba(255, 255, 255, 0.15);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
  transform: translateY(-1px);
}

.dark-mode .header-score .score-board:hover {
  background: rgba(0, 0, 0, 0.3);
}

.header-score .score-value {
  font-size: 1.1rem;
  font-weight: bold;
  color: var(--accent-color);
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  transition: color var(--transition-speed) ease;
}

.header-score .score-board:hover .score-value {
  color: var(--secondary-color);
}

.header-score .score-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: 0;
}

.header-score .score-label {
  font-size: 0.8rem;
  opacity: 0.9;
  margin-bottom: 0.2rem;
  font-weight: 500;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
}

.header-score .score-value {
  font-size: 1.1rem;
  font-weight: bold;
  color: var(--accent-color);
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

.loader-logo {
  width: 30px; /* Smaller for mobile */
  height: 30px; /* Smaller for mobile */
  background-color: var(--accent-color);
  margin: 0 0.5rem; /* Adjusted margin */
  position: relative;
  justify-self: center; /* Center in its grid cell */
}

/* Our new animation that only plays when a line is cleared */
.loader-logo.animate-line-clear {
  animation: lineClearAnimation 1.5s ease-in-out;
  box-shadow: 0 0 20px var(--accent-color);
}

@keyframes lineClearAnimation {
  0% {
    transform: scale(1) rotate(0deg);
    background-color: var(--accent-color);
    box-shadow: 0 0 5px var(--accent-color);
  }
  20% {
    transform: scale(1.5) rotate(90deg);
    background-color: #ffcc00; /* Gold */
    box-shadow: 0 0 25px #ffcc00, 0 0 40px var(--accent-color);
  }
  40% {
    transform: scale(1.2) rotate(180deg);
    background-color: #ff6b6b; /* Reddish */
    box-shadow: 0 0 20px #ff6b6b;
  }
  60% {
    transform: scale(1.8) rotate(270deg);
    background-color: #4ade80; /* Greenish */
    box-shadow: 0 0 30px #4ade80, 0 0 50px var(--accent-color);
  }
  80% {
    transform: scale(1.4) rotate(360deg);
    background-color: #a78bfa; /* Purplish */
    box-shadow: 0 0 25px #a78bfa;
  }
  100% {
    transform: scale(1) rotate(0deg);
    background-color: var(--accent-color);
    box-shadow: 0 0 5px var(--accent-color);
  }
}

/* Animation for when a cell is part of a cleared line - initial highlight */
@keyframes cellClearedEffect {
  0% {
    box-shadow: 0 0 8px 2px rgba(255, 215, 0, 0.7); /* Gold glow */
    transform: scale(1.05);
  }
  50% {
    box-shadow: 0 0 15px 5px rgba(255, 215, 0, 1);
    transform: scale(1.1);
  }
  100% {
    box-shadow: 0 0 8px 2px rgba(255, 215, 0, 0.7);
    transform: scale(1.05);
  }
}

.cell-cleared {
  animation: cellClearedEffect 0.3s ease-in-out;
  /* z-index might be needed if issues with overlap, but start without */
  /* background-color: yellow; */ /* Example, if animation doesn't cover it */
}

/* Animation for cell disappearing */
@keyframes cellDisappearEffect {
  from {
    transform: scale(1.05); /* Start from where cell-cleared might leave it */
    opacity: 1;
  }
  to {
    transform: scale(0.3);
    opacity: 0;
  }
}

.cell-disappear {
  animation: cellDisappearEffect 0.5s ease-out forwards;
  animation-delay: 0.1s; /* Start slightly after cell-cleared begins */
}

/* Add border-box sizing to grid board and container */
.grid-board,
.grid-board-container {
  box-sizing: border-box;
}

.grid-board {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  grid-template-rows: repeat(10, 1fr);
  gap: clamp(2px, 0.8vw, 3px); /* Slightly reduced gap */
  background: transparent;
  padding: clamp(8px, 2vw, 10px); /* Adjusted padding */
  border-radius: 15px; /* Adjusted radius */
  width: 100%;
  height: 100%;
  aspect-ratio: 1;
  box-shadow: none;
  position: relative;
  overflow: hidden;
}

.grid-board::before {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(circle at center, transparent 60%, rgba(var(--tertiary-color-rgb), 0.06));
  z-index: 0;
  pointer-events: none;
}

.grid-cell {
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.08);
  border: 1px solid rgba(0, 0, 0, 0.15);
  box-shadow: 
    0 1px 3px rgba(0, 0, 0, 0.1),
    inset 0 1px 0 rgba(255, 255, 255, 0.3);
  transition: all 0.3s var(--animation-timing);
  position: relative;
  overflow: hidden;
  z-index: 1;
  box-sizing: border-box;
  border-radius: 3px;
}

.grid-cell::after {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.15) 0%, 
    rgba(255, 255, 255, 0.05) 50%, 
    rgba(0, 0, 0, 0.02) 100%);
  border-radius: inherit;
}

.grid-cell.filled {
  /* Allow inline shape color to show instead of default accent color */
  transform: scale(0.95);
  box-shadow: none;
  border-color: transparent;
  z-index: 2;
}

.grid-cell.preview {
  background-color: rgba(var(--accent-color-rgb), 0.3);
  border: none;
  outline: 3px dashed var(--accent-color);
  outline-offset: -1px;
  box-sizing: border-box;
  box-shadow: 0 0 20px rgba(var(--accent-color-rgb), 0.5);
  animation: pulse 1.5s infinite alternate;
  z-index: 5;
  position: relative;
  transform: scale(1); /* Ensure scaling effect works properly */
}

/* Enhanced preview states for better user feedback */
.grid-cell.preview.invalid {
  background-color: rgba(255, 82, 82, 0.3);
  outline: 3px dashed #ff5252;
  box-shadow: 0 0 20px rgba(255, 82, 82, 0.5);
  animation: shakeInvalid 0.5s ease-in-out;
}

.grid-cell.preview.invalid::before {
  border-color: #ff5252;
  opacity: 0.8;
}

@keyframes shakeInvalid {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-2px); }
  75% { transform: translateX(2px); }
}

/* Valid preview enhancement */
.grid-cell.preview.valid {
  background-color: rgba(76, 175, 80, 0.3);
  outline: 3px dashed #4caf50;
  box-shadow: 0 0 20px rgba(76, 175, 80, 0.5);
  animation: pulseValid 1s infinite alternate;
}

.grid-cell.preview.valid::before {
  border-color: #4caf50;
  opacity: 0.6;
}

@keyframes pulseValid {
  0% { opacity: 0.8; transform: scale(0.98); }
  100% { opacity: 1; transform: scale(1.02); }
}

@keyframes pulse {
  0% { opacity: 0.7; transform: scale(0.98); }
  100% { opacity: 1; transform: scale(1.02); }
}

/* Add a new outline effect to make preview more visible against all backgrounds */
.grid-cell.preview::before {
  content: '';
  position: absolute;
  inset: -2px;
  border-radius: inherit;
  background: transparent;
  border: 2px solid white;
  opacity: 0.5;
  z-index: 6;
  pointer-events: none;
}
/* Special treatment for dark mode */
.dark-mode .grid-cell.preview {
  background-color: rgba(var(--accent-color-rgb), 0.4);
  border-color: var(--accent-color);
}

.dark-mode .grid-cell.preview::before {
  border-color: rgba(255, 255, 255, 0.8);
  opacity: 0.6;
}

.shape-previews {
  display: flex;
  justify-content: center;
  gap: 10px;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
  gap: 1rem;
  align-content: start;
}

.shape-preview {
  display: inline-block;
}

.shape {
  display: grid;
  grid-template-columns: repeat(5, 20px);
  grid-template-rows: repeat(5, 20px);
}

.shape-cell {
  width: 20px;
  height: 20px;
  border: 1px solid #ccc;
  transition: background-color 0.3s ease;
}



.score-board {
  font-size: 1.5em;
  margin-bottom: 20px;
  background: transparent;
  box-shadow: none;
  border: none;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  gap: 1rem;
}

.score-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: 0;
  flex: 1;
}

.score-label {
  font-size: 0.75rem;
  opacity: 0.8;
  margin-bottom: 0.25rem;
  font-weight: 500;
}

.score-value {
  font-size: 1rem;
  font-weight: bold;
  color: var(--accent-color);
}

.game-over {
  background-color: rgba(0, 0, 0, 0.7);
  padding: 20px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 8px;
}

/* Enhance the game container for a more centered layout */
.game-container {
  display: grid;
  grid-template-columns: 1fr; /* Default to single column for mobile */
  grid-template-rows: auto 1fr auto; /* Score, Grid, Shapes */
  gap: 1rem; /* Reduced gap for mobile */
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0.5rem;
  align-items: stretch; /* Stretch items to fill width */
  justify-content: center;
  min-height: 0; /* Allow flex to control height */
  flex: 1;
  overflow-y: auto; /* Allow vertical scroll if content overflows */
  overflow-x: hidden;
}
.game-container::-webkit-scrollbar {
  display: none;
}

.grid-board-container {
  width: 100%;
  aspect-ratio: 1;
  max-width: min(90vw, 700px); /* Increased mobile grid size from 85vw/600px to 90vw/700px */
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0 auto;
  position: relative;
  grid-row: 2; /* Grid is the middle element in mobile layout */
  padding: 15px; /* Increased padding for mobile */
  border-radius: 20px;  background: linear-gradient(135deg, 
    rgba(0, 0, 0, 0.06) 0%, 
    rgba(0, 0, 0, 0.03) 100%);
  backdrop-filter: blur(10px);
  box-shadow: 
    0 10px 40px rgba(0, 0, 0, 0.15),
    inset 0 1px 0 rgba(255, 255, 255, 0.4);
  border: 1px solid rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.grid-board-container::before {
  content: '';
  position: absolute;
  inset: -2px;
  background: linear-gradient(45deg, 
    transparent 0%,
    rgba(var(--accent-color-rgb), 0.1) 25%,
    rgba(var(--tertiary-color-rgb), 0.1) 75%,
    transparent 100%);
  border-radius: 22px;
  z-index: -1;
  opacity: 0.5;
}

.grid-board-container:hover {
  transform: translateY(-1px);
  box-shadow: 
    0 15px 50px rgba(0, 0, 0, 0.15),
    inset 0 1px 0 rgba(255, 255, 255, 0.15);
}

.shapes-container {
  min-width: auto; /* Allow to shrink */
  width: 100%; /* Full width on mobile */
  max-width: 100%; 
  margin-right: 0; /* No margin on mobile */
  padding: 0.75rem; /* Adjusted padding */  background: linear-gradient(135deg, 
    rgba(0, 0, 0, 0.08) 0%, 
    rgba(0, 0, 0, 0.04) 100%);
  border-radius: 16px; /* Increased radius for modern look */
  backdrop-filter: blur(15px);  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.12),
    inset 0 1px 0 rgba(255, 255, 255, 0.3);
  display: flex;
  flex-direction: column;
  grid-row: 3; /* Shapes container at the bottom */
  gap: 0.75rem; /* Space between shape previews and undo button */
  border: 1px solid rgba(0, 0, 0, 0.12); /* Enhanced border */
  transition: all var(--transition-speed) ease;
  position: relative;
  overflow: hidden;
}

.shapes-container::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(45deg, 
    var(--accent-color), 
    var(--tertiary-color), 
    var(--secondary-color));
  border-radius: 18px;
  opacity: 0;
  z-index: -1;
  transition: opacity 0.3s ease;
}

.shapes-container:hover {
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.15) 0%, 
    rgba(255, 255, 255, 0.08) 100%);
  box-shadow: 
    0 12px 40px rgba(0, 0, 0, 0.15),
    inset 0 1px 0 rgba(255, 255, 255, 0.3);
  transform: translateY(-2px);
}

.shapes-container:hover::before {
  opacity: 0.1;
}

.mobile-score-display {
  grid-row: 1; /* Score display at the top */
  width: 100%;
  padding: 0.5rem 0;
}

.mobile-score-display .score-board {
  margin: 0 auto; /* Center the scoreboard */
  padding: 0.5rem;
  background: rgba(255, 255, 255, 0.05); /* Subtle background */
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.05);
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  gap: 1rem;
  text-align: center;
}

.mobile-score-display .score-board {
  transition: all var(--transition-speed) ease;
}

.mobile-score-display .score-value {
  transition: color var(--transition-speed) ease;
}

/* Touch feedback for mobile */
@media (hover: none) and (pointer: coarse) {
  .mobile-score-display .score-board:active {
    transform: scale(0.98);
    background: rgba(255, 255, 255, 0.08);
  }
  
  .dark-mode .mobile-score-display .score-board:active {
    background: rgba(0, 0, 0, 0.2);
  }
}

.mobile-score-display .score-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: 0;
  flex: 1;
}

.mobile-score-display .score-label {
  font-size: 0.75rem;
  opacity: 0.8;
  margin-bottom: 0.25rem;
  font-weight: 500;
}

.mobile-score-display .score-value {
  font-size: 1rem;
  font-weight: bold;
  color: var(--accent-color);
}

.dark-mode .mobile-score-display .score-board {
  background: rgba(0, 0, 0, 0.2);
}

.dark-mode .mobile-score-display .score-value {
  color: var(--accent-color);
}


.score-container {
  display: none; /* This seems unused, ensure it's hidden or repurposed */
}

.shape-previews {
  display: grid;
  grid-template-columns: repeat(3, 1fr); /* Always 3 columns for shapes */
  gap: 0.75rem; /* Adjusted gap */
  align-content: center;
  justify-items: center;
  width: 100%; /* Take full width of shapes-container */
}

.shape-preview {
  position: relative;
  overflow: hidden;
  backdrop-filter: blur(12px);  border: 1px solid rgba(0, 0, 0, 0.12);
  background: linear-gradient(135deg, 
    rgba(0, 0, 0, 0.06) 0%, 
    rgba(0, 0, 0, 0.03) 100%);
  border-radius: 12px; /* Enhanced radius */
  padding: 0.6rem; /* Slightly increased padding */
  width: 100%; /* Make previews fill their grid cells */
  box-shadow: 
    0 4px 15px rgba(0, 0, 0, 0.12),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  display: flex; /* Center shape inside preview */
  justify-content: center; /* Center shape inside preview */
  align-items: center; /* Center shape inside preview */
  min-height: 65px; /* Slightly increased minimum tap area */
  cursor: pointer;
}

.shape-preview::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent 0%, 
    rgba(255, 255, 255, 0.15) 50%, 
    transparent 100%);
  transition: left 0.6s ease;
  pointer-events: none;
}

.shape-preview::after {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  background: radial-gradient(circle at center, 
    rgba(var(--accent-color-rgb), 0.05) 0%, 
    transparent 70%);
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.shape-preview:hover {
  transform: translateY(-4px) scale(1.02);
  box-shadow: 
    0 12px 30px rgba(0, 0, 0, 0.15),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
  border-color: rgba(var(--accent-color-rgb), 0.3);
}

.shape-preview:hover::before {
  left: 100%;
}

.shape-preview:hover::after {
  opacity: 1;
}

.shape-preview.empty {
  opacity: 0.4;
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.03) 0%, 
    rgba(255, 255, 255, 0.01) 100%);
  transform: none;
  cursor: not-allowed;
}

.shape-preview.empty:hover {
  transform: none;
  box-shadow: 
    0 4px 15px rgba(0, 0, 0, 0.08),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.15);
}

.shape {
  display: inline-block;
  cursor: grab;
  padding: 3px;
}

.shape-row {
  display: flex;
}

.shape-cell {
  width: var(--shape-cell-size);
  height: var(--shape-cell-size);
  border: 1px solid rgba(0, 0, 0, 0.15);
  background: rgba(0, 0, 0, 0.08);
  border-radius: 3px; /* Slightly smaller radius */
  transition: all 0.3s var(--animation-timing);
  margin: 1px;
}

.shape-cell.filled {
  background-color: var(--accent-color);
  box-shadow: 
    inset 0 0 5px rgba(255, 255, 255, 0.3),
    0 0 8px rgba(var(--accent-color-rgb), 0.5);
  border-color: transparent;
}

/* Smaller shape cells in desktop sidebar */
.shapes-container .shape {
  grid-template-columns: repeat(5, 16px); /* Reduced from 20px to 16px */
  grid-template-rows: repeat(5, 16px);
}

.shapes-container .shape-cell {
  width: 16px;
  height: 16px;
  border-width: 0.5px; /* Thinner borders for compact look */
}

/* Mobile and tablet adjustments */
/* Styles for tablets and larger phones (e.g., landscape mobile) */
@media (min-width: 600px) {
  .app-header {
    padding: 1rem 2rem;
    gap: 2rem;
  }

  .app-header h1 {
    font-size: clamp(2rem, 4vw, 3rem);
  }

  .header-left {
    gap: 1rem;
  }

  .loader-logo {
    width: 50px;
    height: 50px;
  }

  .header-score {
    display: flex; /* Ensure the scoreboard is visible */
    align-items: center;
    justify-content: flex-end;  }

  .gear-icon {
    font-size: 1.5rem;
  }  .game-container {
    grid-template-columns: 160px 1fr; /* Reduced from 200px to 160px for more grid space */
    grid-template-rows: 1fr; /* Single row */
    gap: 2rem; /* Reduced gap to 2rem for better space utilization */
    align-items: flex-start; 
    padding: 1.5rem; /* Reduced padding */
    max-width: 1400px; /* Optimized max-width */
    margin: 0 auto; /* Center game container */
  }
  .shapes-container {
    grid-row: 1; 
    grid-column: 1;
    width: auto; 
    min-width: 160px; /* Reduced from 200px */
    max-width: 160px; /* Smaller shape preview pane */
    margin-right: 0; /* Remove margin for better spacing */
    padding: 1rem; /* Reduced padding */
  }  .grid-board-container {
    grid-row: 1; 
    grid-column: 2;
    max-width: min(75vw, 1200px); /* Increased from 70vw/1100px for larger grid */
    padding: 15px; /* Optimized padding */
  }
  .mobile-score-display {
    display: none; /* Hide mobile score display on larger screens */
  }  .shape-previews {
    grid-template-columns: 1fr; /* Stack shapes vertically in sidebar */
    gap: 0.75rem; /* Reduced gap for more compact layout */
  }
   .shape-preview {
    min-height: 60px; /* Reduced from 70px */
    padding: 0.5rem; /* Reduced padding */
    border-radius: 8px; /* Smaller border radius */
  }
}


/* Landscape mode optimizations - refine existing one */
@media (max-height: 600px) and (orientation: landscape) and (max-width: 1024px) { /* Added max-width to avoid conflict with large landscape */
  .App {
    padding: clamp(5px, 1vw, 15px); /* Reduce padding in landscape */
  }
  .app-header {
    padding: 0.5rem 1rem;
    margin-bottom: 0.5rem;
    min-height: 50px; /* Smaller header in landscape */
  }
  .app-header h1 {
    font-size: clamp(1.5rem, 3vw, 2rem);
  }
  .loader-logo {
    width: 25px;
    height: 25px;
  }
  .game-container {
    grid-template-columns: auto 1fr; /* Side-by-side layout */
    grid-template-rows: 1fr; /* Ensure single row */
    gap: 1rem;
    padding: 0.5rem;
    align-items: center; /* Center items vertically in landscape */
  }
  .shapes-container {
    grid-column: 1;
    grid-row: 1;
    max-width: 180px; /* Slimmer shapes container */
    padding: 0.75rem;
    margin-right: 0.5rem;
  }
  .shape-previews {
    grid-template-columns: 1fr; /* Stack shapes vertically */
    gap: 0.5rem;
  }
  .shape-preview {
    padding: 0.4rem;
    min-height: 50px;
  }
   .grid-board-container {
    grid-column: 2;
    grid-row: 1;
    max-width: min(75vh, 450px); /* Adjust grid size for landscape */
  }
  .mobile-score-display {
    display: none; /* Hide mobile score, header score should be visible if screen is wide enough */
  }
  .undo-btn {
    padding: 0.4rem 0.8rem;
    font-size: 0.8rem;
  }
}

/* Specific styles for very small screens (e.g., iPhone SE, iPhone 11 portrait) */
@media (max-width: 420px) {
  :root {
    --shape-cell-size: clamp(10px, 4vw, 15px); /* Smaller shape cells */
  }
  .App {
    padding: clamp(5px, 2vw, 10px);
    gap: 0.5rem;
  }  .app-header {
    padding: 0.5rem 0.75rem;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
    border-radius: 10px;
  }
  
  .header-left {
    gap: 0.5rem;
  }
  
  .app-header h1 {
    font-size: clamp(1.5rem, 5vw, 1.8rem);
  }
  
  .loader-logo {
    width: 25px;
    height: 25px;
  }
  .gear-icon {
    font-size: 1.5rem; /* Ensure gear is tappable */
    padding: 0.3rem;
  }

  .game-container {
    gap: 0.75rem;
    padding: 0.25rem;
  }
  .shapes-container {
    padding: 0.5rem;
    border-radius: 10px;
    gap: 0.5rem;
  }
  .shape-previews {
    gap: 0.5rem;
  }
  .shape-preview {
    padding: 0.3rem;
    border-radius: 8px;
    min-height: 50px;
  }
  .grid-board-container {
    max-width: min(92vw, 450px); /* Ensure it fits well */
    padding: 2px;
  }
  .grid-board {
    gap: clamp(1px, 0.5vw, 2px);
    padding: clamp(5px, 1.5vw, 8px);
    border-radius: 12px;
  }  .mobile-score-display .score-board {
    padding: 0.4rem;
    border-radius: 6px;
    gap: 0.75rem;
  }
  .mobile-score-display .score-label {
    font-size: 0.7rem;
  }
  .mobile-score-display .score-value {
    font-size: 1.1rem;
  }
  .undo-btn {
    padding: 0.5rem 0.8rem; /* Slightly larger tap area */
    font-size: 0.85rem;
    border-radius: 6px;
  }
}

/* Ensure proper header alignment on very small screens */
@media (max-width: 380px) {
  .app-header {
    padding: 0.4rem 0.6rem;
    gap: 0.4rem;
  }
  
  .header-left {
    gap: 0.4rem;
    min-width: 0; /* Allow shrinking */
  }
  
  .app-header h1 {
    font-size: clamp(1.2rem, 6vw, 1.6rem);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  .header-right {
    gap: 0.5rem;
    flex-shrink: 0; /* Prevent buttons from shrinking */
  }
  
  .loader-logo {
    width: 20px;
    height: 20px;
  }
  
  .gear-icon {
    font-size: 1.4rem;
    padding: 0.3rem;
  }
}

/* Enhanced Dark Mode Styles */
.dark-mode {
  background: linear-gradient(135deg, #0a0a0a, #1a1a1a, #0f0f23);
  background-size: 400% 400%;
  animation: gradientShift 25s ease infinite;
}

.dark-mode .App {
  background: linear-gradient(135deg, 
    rgba(0, 0, 0, 0.8) 0%, 
    rgba(20, 20, 20, 0.9) 100%);
  color: var(--dark-text);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.dark-mode .app-header {
  background: rgba(0, 0, 0, 0.3);
  border-bottom-color: rgba(var(--accent-color-rgb), 0.5);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}

.dark-mode .grid-cell {
  background-color: rgba(255, 255, 255, 0.02);
  border-color: rgba(255, 255, 255, 0.08);
}

.dark-mode .grid-board {
  background: rgba(0, 0, 0, 0.4);
  border: 1px solid rgba(255, 255, 255, 0.05);
}

.dark-mode .grid-board-container {
  background: linear-gradient(135deg, 
    rgba(0, 0, 0, 0.3) 0%, 
    rgba(20, 20, 20, 0.4) 100%);
  border-color: rgba(255, 255, 255, 0.1);
  box-shadow: 
    0 10px 40px rgba(0, 0, 0, 0.5),
    inset 0 1px 0 rgba(255, 255, 255, 0.05);
}

.dark-mode .shapes-container {
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.05) 0%, 
    rgba(255, 255, 255, 0.02) 100%);
  border-color: rgba(255, 255, 255, 0.1);
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.dark-mode .shape-preview {
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.03) 0%, 
    rgba(255, 255, 255, 0.01) 100%);
  border-color: rgba(255, 255, 255, 0.1);
  box-shadow: 
    0 4px 15px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.05);
}

.dark-mode .shape-preview:hover {
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.08) 0%, 
    rgba(255, 255, 255, 0.04) 100%);
  border-color: rgba(var(--accent-color-rgb), 0.4);
  box-shadow: 
    0 12px 30px rgba(0, 0, 0, 0.5),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.dark-mode .mobile-score-display .score-board {
  background: rgba(0, 0, 0, 0.4);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}

.dark-mode .settings-menu {
  background: linear-gradient(135deg, 
    rgba(20, 20, 20, 0.95) 0%, 
    rgba(10, 10, 10, 0.98) 100%);
  color: var(--dark-text);
  border: 1px solid rgba(255, 255, 255, 0.15);
  backdrop-filter: blur(20px);
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.8);
}

/* Enhanced Grid Visual Effects */
.grid-board {
  position: relative;
  overflow: hidden;
}

.grid-board::after {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: 
    radial-gradient(circle at 20% 20%, rgba(var(--accent-color-rgb), 0.03) 0%, transparent 50%),
    radial-gradient(circle at 80% 80%, rgba(var(--tertiary-color-rgb), 0.03) 0%, transparent 50%);
  animation: subtleRotate 30s linear infinite;
  pointer-events: none;
  z-index: 0;
}

@keyframes subtleRotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Enhanced Shape Preview Cards */
.shape-preview {
  position: relative;
  overflow: hidden;
  backdrop-filter: blur(12px);
  border: 1px solid rgba(255, 255, 255, 0.15);
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.08) 0%, 
    rgba(255, 255, 255, 0.03) 100%);
}

.shape-preview::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent 0%, 
    rgba(255, 255, 255, 0.1) 50%, 
    transparent 100%);
  transition: left 0.6s ease;
  pointer-events: none;
}

.shape-preview:hover::before {
  left: 100%;
}

/* Enhanced Mobile Touch Feedback */
@media (hover: none) and (pointer: coarse) {
  .shape-preview:active {
    transform: scale(0.95);
    background: rgba(var(--accent-color-rgb), 0.1);
    transition: all 0.1s ease;
  }
  
  .grid-cell:active {
    transform: scale(0.98);
    transition: transform 0.1s ease;
  }
  
  .gear-icon:active,
  .undo-btn:active {
    transform: scale(0.95);
    transition: transform 0.1s ease;
  }
}

/* Enhanced Animations */
.settings-menu {
  animation: slideIn 0.3s ease-out;
  width: var(--menu-width);
  max-height: 90vh;
  overflow-y: auto;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.menu-btn {
  transition: all var(--transition-speed);
}

.menu-btn:hover {
  transform: translateY(-2px);
}

.menu-btn.active {
  background-color: var(--accent-color);
  color: white;
}

.difficulty-buttons {
  display: flex;
  gap: 5px;
  margin: 5px 0;
}

/* Settings Menu Styles - ensure backdrop and menu also use .visible */
.settings-backdrop {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.65); /* Slightly darker backdrop */
  backdrop-filter: blur(4px); /* Increased blur */
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease-in-out;
  z-index: 800; 
}

.settings-backdrop.visible {
  opacity: 1;
  pointer-events: all;
}

.settings-menu {
  background: var(--primary-bg);
  color: var(--primary-color);
  width: clamp(300px, 90vw, 420px); /* Adjusted width */
  max-height: calc(100vh - 4rem); /* Ensure padding from viewport edges */
  overflow-y: auto;
  border-radius: 16px; /* Larger radius */
  padding: 0; /* Remove padding, will be handled by sections */
  box-shadow: 0 12px 35px rgba(0,0,0,0.25); /* Enhanced shadow */
  display: flex; /* Use flex for better internal layout */
  flex-direction: column; /* Stack header, tabs, content */
  position: fixed; 
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.95);
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.25s ease-out, transform 0.25s ease-out;
  z-index: 801;
  animation: none;
}

.settings-menu.visible {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
  pointer-events: all;
}

.dark-mode .settings-menu {
  background: var(--dark-secondary); 
  color: var(--dark-text);
  border: 1px solid rgba(255,255,255,0.1);
}

.menu-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 1.5rem;
  border-bottom: 1px solid rgba(0,0,0,0.1);
}

.dark-mode .menu-header {
  border-bottom-color: rgba(255,255,255,0.15);
}

.menu-title {
  font-size: 1.5rem; /* Adjusted size */
  font-weight: 600;
  margin: 0;
  color: var(--accent-color);
}

.dark-mode .menu-title {
  color: var(--tertiary-color);
}

.close-btn {
  background: transparent;
  border: none;
  color: var(--primary-color);
  cursor: pointer;
  padding: 0.5rem;
  display: flex; /* For centering SVG */
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background-color 0.2s ease, color 0.2s ease;
}

.dark-mode .close-btn {
  color: var(--dark-text);
}

.close-btn:hover {
  background-color: rgba(0,0,0,0.05);
  color: var(--accent-color);
}

.dark-mode .close-btn:hover {
  background-color: rgba(255,255,255,0.1);
  color: var(--tertiary-color);
}

/* Tabs styling */
.settings-tabs {
  display: flex;
  gap: 0; /* Remove gap, tabs will touch */
  padding: 0.75rem 1.5rem; /* Padding around tabs */
  border-bottom: 1px solid rgba(0,0,0,0.05);
  background-color: rgba(0,0,0,0.02);
}

.dark-mode .settings-tabs {
  border-bottom-color: rgba(255,255,255,0.1);
  background-color: rgba(255,255,255,0.03);
}

.settings-tab {
  flex: 1;
  background: transparent;
  border: none;
  padding: 0.75rem 0.5rem; /* Adjusted padding */
  border-radius: 8px; /* Rounded tabs */
  font-weight: 500; /* Slightly less bold */
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem; /* Space between icon and label */
  cursor: pointer;
  transition: background-color 0.2s, color 0.2s, box-shadow 0.2s;
  color: var(--primary-color);
  text-align: center;
}

.dark-mode .settings-tab {
  color: var(--dark-text);
}

.settings-tab:hover {
  background-color: rgba(var(--accent-color-rgb), 0.1);
  color: var(--accent-color);
}

.dark-mode .settings-tab:hover {
  background-color: rgba(var(--tertiary-color-rgb), 0.15);
  color: var(--tertiary-color);
}

.settings-tab.active {
  background: var(--accent-color);
  color: #fff;
  font-weight: 600;
  box-shadow: 0 2px 8px rgba(var(--accent-color-rgb), 0.3);
}

.dark-mode .settings-tab.active {
  background: var(--tertiary-color);
  box-shadow: 0 2px 8px rgba(var(--tertiary-color-rgb), 0.4);
}

.tab-icon {
  font-size: 1.1rem;
}

.tab-label {
  font-size: 0.85rem;
  white-space: nowrap;
}

/* Settings Content Area */
.settings-content {
  padding: 1.5rem;
  overflow-y: auto; /* Allow content to scroll if it exceeds max-height */
  flex-grow: 1; /* Allow content to take available space */
}

/* Panel visibility */
.settings-panel { 
  display: none; 
  animation: panelFadeIn 0.3s ease-out forwards;
}
.settings-panel.active { 
  display: block; 
}

@keyframes panelFadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Panel group styling */
.panel-group {
  margin-bottom: 1.75rem; /* Increased spacing */
}
.panel-group:last-child {
  margin-bottom: 0;
}


.panel-group-title {
  font-size: 1.1rem; /* Slightly larger group titles */
  font-weight: 600;
  color: var(--primary-color);
  margin-bottom: 0.75rem;
  padding-bottom: 0.5rem;
  border-bottom: 1px solid rgba(0,0,0,0.08);
}

/* Responsive adjustments */

/* Consolidated mobile grid override to ensure 10x10 cells fit viewport */
@media (max-width: 768px) {
  :root {
    --cell-size-mobile: calc((100vw - (var(--grid-gap) * 9)) / 10);
  }
  .grid-board-container {
    width: 100vw !important;
    max-width: 100vw !important;
    padding: 0 !important;
    aspect-ratio: 1 !important;
    margin: 0 auto !important;
  }
  .grid-board {
    display: grid !important;
    width: 100% !important;
    height: auto !important;
    grid-template-columns: repeat(10, var(--cell-size-mobile)) !important;
    grid-template-rows: repeat(10, var(--cell-size-mobile)) !important;
    gap: var(--grid-gap) !important;
    padding: 0 !important;
    margin: 0 !important;
  }
  .grid-cell {
    width: var(--cell-size-mobile) !important;
    height: var(--cell-size-mobile) !important;
  }
}

.dark-mode .panel-group-title {
  color: var(--dark-text);
  border-bottom-color: rgba(255,255,255,0.1);
}

/* General button styling within settings */
.settings-panel .menu-btn,
.settings-panel .option-btn,
.settings-panel .base-difficulty-btn,
.settings-panel .mode-option,
.settings-panel .theme-option {
  display: flex; /* For icon and label alignment */
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  width: 100%;
  padding: 0.75rem 1rem; /* Consistent padding */
  margin-bottom: 0.5rem;
  border: 1px solid rgba(0,0,0,0.1);
  border-radius: 8px;
  background-color: var(--primary-bg);
  color: var(--primary-color);
  font-size: 0.95rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  text-align: center;
}

.dark-mode .settings-panel .menu-btn,
.dark-mode .settings-panel .option-btn,
.dark-mode .settings-panel .base-difficulty-btn,
.dark-mode .settings-panel .mode-option,
.dark-mode .settings-panel .theme-option {
  background-color: var(--dark-cell);
  border-color: rgba(255,255,255,0.15);
  color: var(--dark-text);
}

.settings-panel .menu-btn:hover,
.settings-panel .option-btn:hover,
.settings-panel .base-difficulty-btn:hover,
.settings-panel .mode-option:hover,
.settings-panel .theme-option:hover {
  border-color: var(--accent-color);
  background-color: rgba(var(--accent-color-rgb), 0.05);
  color: var(--accent-color);
  transform: translateY(-1px);
  box-shadow: 0 3px 10px rgba(var(--accent-color-rgb), 0.1);
}

.dark-mode .settings-panel .menu-btn:hover,
.dark-mode .settings-panel .option-btn:hover,
.dark-mode .settings-panel .base-difficulty-btn:hover,
.dark-mode .settings-panel .mode-option:hover,
.dark-mode .settings-panel .theme-option:hover {
  border-color: var(--tertiary-color);
  background-color: rgba(var(--tertiary-color-rgb), 0.1);
  color: var(--tertiary-color);
  box-shadow: 0 3px 10px rgba(var(--tertiary-color-rgb), 0.15);
}

/* Active state for option buttons */
.settings-panel .option-btn.active,
.settings-panel .base-difficulty-btn.active,
.settings-panel .mode-option.active,
.settings-panel .theme-option.active {
  background-color: var(--accent-color);
  color: #fff;
  border-color: var(--accent-color);
  font-weight: 600;
  box-shadow: 0 2px 8px rgba(var(--accent-color-rgb), 0.3);
}

.dark-mode .settings-panel .option-btn.active,
.dark-mode .settings-panel .base-difficulty-btn.active,
.dark-mode .settings-panel .mode-option.active,
.dark-mode .settings-panel .theme-option.active {
  background-color: var(--tertiary-color);
  border-color: var(--tertiary-color);
  box-shadow: 0 2px 8px rgba(var(--tertiary-color-rgb), 0.4);
}

/* Specific button styles */
.settings-panel .primary-btn {
  background-color: var(--accent-color);
  color: #fff;
  font-weight: 600;
}
.dark-mode .settings-panel .primary-btn {
  background-color: var(--tertiary-color);
}
.settings-panel .primary-btn:hover {
  background-color: var(--accent-hover);
  box-shadow: 0 4px 12px rgba(var(--accent-color-rgb), 0.35);
}
.dark-mode .settings-panel .primary-btn:hover {
  background-color: rgba(var(--tertiary-color-rgb), 0.85);
  box-shadow: 0 4px 12px rgba(var(--tertiary-color-rgb), 0.4);
}

/* Difficulty buttons layout */
.difficulty-buttons {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  gap: 0.5rem;
}

.difficulty-icon {
  font-size: 1.2rem;
}

.base-difficulty-container {
  margin-top: 1rem;
  border-top: 1px dashed rgba(0,0,0,0.1);
  padding-top: 1rem;
}
.dark-mode .base-difficulty-container {
  border-top-color: rgba(255,255,255,0.1);
}

.base-difficulty-btn .btn-label {
  font-weight: bold;
}
.base-difficulty-btn .btn-description {
  font-size: 0.8rem;
  opacity: 0.8;
  display: block; /* Ensure it takes full width */
  margin-top: 0.25rem;
}

/* Mode Switch (Light/Dark) */
.mode-switch {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 0.5rem;
}
.mode-option {
  flex: 1;
}
.mode-icon {
  font-size: 1.3rem;
}

/* Theme Selector */
.theme-selector {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: 0.75rem;
}
.theme-option {
  flex-direction: column; /* Stack preview and name */
  padding: 0.75rem;
  height: auto;
}
.theme-preview {
  width: 100%;
  height: 40px; /* Increased height */
  border-radius: 6px;
  margin-bottom: 0.5rem;
  border: 2px solid transparent; /* For active state */
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.7rem;
  color: #fff;
  text-shadow: 0 1px 2px rgba(0,0,0,0.3);
}

.theme-option.active .theme-preview {
  border-color: #fff; /* White border for active theme */
  box-shadow: inset 0 0 0 2px var(--accent-color);
}
.dark-mode .theme-option.active .theme-preview {
   box-shadow: inset 0 0 0 2px var(--tertiary-color);
}

.default-theme-preview { background: linear-gradient(135deg, #6259ff, #36c5f0); }
.modern-theme-preview { background: linear-gradient(135deg, #ff7e5f, #6c63ff); }
.neon-theme-preview { 
  background: #1a1a1a;
  border: 2px solid #0ff;
  box-shadow: 0 0 10px #0ff, inset 0 0 5px #0ff;
  color: #0ff;
}
.neon-theme-preview::before {
  content: "Neon";
}

.theme-name {
  font-size: 0.9rem;
}

/* Save/Load Section */
.save-load-options {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 0.75rem;
}

.auto-save-info {
  margin-top: 1rem;
  text-align: center;
}
.info-text {
  font-size: 0.85rem;
  opacity: 0.7;
  line-height: 1.4;
}

/* Help Section */
.keyboard-shortcuts {
  margin-top: 1rem;
  background-color: rgba(0,0,0,0.03);
  padding: 1rem;
  border-radius: 8px;
}
.dark-mode .keyboard-shortcuts {
  background-color: rgba(255,255,255,0.05);
}

.shortcuts-title {
  font-size: 1rem;
  font-weight: 600;
  margin-top: 0;
  margin-bottom: 0.75rem;
}

.shortcuts-list {
  list-style: none;
  padding: 0;
  margin: 0;
}


.shortcuts-list li {
  margin-bottom: 0.5rem;
  font-size: 0.9rem;
}
.gear-icon {
  background: transparent !important;
  box-shadow: none !important;
}

/* Accent hover states */
.settings-tab.active,
.menu-btn.active,
.restart-btn:hover,
.share-btn:hover {
  background: var(--accent-hover) !important;
  color: #fff !important;
  /* Hide duplicated or conflicting overrides */
  /* Removed multiple .pulse, .fadeIn, .settings-menu, .gear-icon re-definitions */
}

/* Consolidated mobile styles */
@media (max-width: 768px) {
  :root { --cell-size: var(--cell-size-mobile); --cell-size-mobile: calc((100vw - (var(--grid-gap)*9)) / 10); }
  .App { padding: var(--game-padding); height: auto; min-height: auto; border-radius: 16px; }
  .app-header { padding: 0.5rem 1rem; margin-bottom: 0.5rem; height: auto; gap: 0.75rem; }
  .header-left { gap: 0.5rem; }
  .app-header h1 { font-size: clamp(1.5rem, 5vw, 2rem); }
  .game-container { display: flex; flex-direction: column; gap: 0.75rem; margin: 0; padding: 0; width: 100%; }
  .grid-board-container { width: 95%; padding: 0; margin: 0 auto; aspect-ratio: 1; max-width: 90vw; }
  .grid-board { display: grid; grid-template-columns: repeat(10, var(--cell-size-mobile)); grid-template-rows: repeat(10, var(--cell-size-mobile)); gap: var(--grid-gap); padding: var(--grid-gap); }
  .grid-cell { width: var(--cell-size-mobile); height: var(--cell-size-mobile); }
  .shape-cell { width: calc(var(--shape-cell-size) * 1.2); height: calc(var(--shape-cell-size) * 1.2); }
  .shape-preview, .menu-btn, .gear-icon, .close-btn { min-width: 44px; min-height: 44px; }
}

/* iPhone 11 specific optimizations (max-width: 414px) */
@media (max-width: 414px) {
  .grid-board-container { width: 100vw; padding: 0; margin: 0; }
  .grid-board { grid-template-columns: repeat(10, var(--cell-size-mobile)); grid-template-rows: repeat(10, var(--cell-size-mobile)); padding: 2px; gap: 2px; }
  .grid-cell { border-radius: 0; }
  .shape-preview:hover { transform: none; box-shadow: none; }
  .shape-preview:active { transform: scale(1.05); }
}

/* Performance Optimizations */
.grid-cell,
.shape-preview,
.shapes-container,
.grid-board-container {
  will-change: transform;
  backface-visibility: hidden;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Smooth scroll behavior */
html {
  scroll-behavior: smooth;
}

/* GPU acceleration for animations */
.grid-cell.filled,
.grid-cell.preview,
.shape-preview:hover,
.shapes-container:hover {
  transform: translateZ(0);
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
  
  .grid-board::after {
    animation: none;
  }
  
  .shape-preview::before {
    transition: none;
  }
}

/* Enhanced Undo Button Styling */
.undo-btn {
  width: 100%;
  padding: 0.75rem 1rem;
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.12) 0%, 
    rgba(255, 255, 255, 0.06) 100%);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 12px;
  color: var(--primary-color);
  font-size: 0.95rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s var(--animation-timing);
  backdrop-filter: blur(10px);
  box-shadow: 
    0 4px 15px rgba(0, 0, 0, 0.08),
    inset 0 1px 0 rgba(255, 255, 255, 0.15);
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  min-height: 44px; /* Ensure adequate touch target */
}

.undo-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent 0%, 
    rgba(255, 255, 255, 0.1) 50%, 
    transparent 100%);
  transition: left 0.6s ease;
  pointer-events: none;
}

.undo-btn:hover {
  transform: translateY(-2px);
  background: linear-gradient(135deg, 
    rgba(var(--accent-color-rgb), 0.15) 0%, 
    rgba(var(--accent-color-rgb), 0.08) 100%);
  border-color: rgba(var(--accent-color-rgb), 0.4);
  box-shadow: 
    0 8px 25px rgba(0, 0, 0, 0.12),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
  color: var(--accent-color);
}

.undo-btn:hover::before {
  left: 100%;
}

.undo-btn:active {
  transform: translateY(0) scale(0.98);
  transition: all 0.1s ease;
}

.undo-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.04) 0%, 
    rgba(255, 255, 255, 0.02) 100%);
  border-color: rgba(255, 255, 255, 0.1);
  color: rgba(var(--primary-color), 0.6);
  box-shadow: 
    0 2px 8px rgba(0, 0, 0, 0.04),
    inset 0 1px 0 rgba(255, 255, 255, 0.08);
}

.undo-btn:disabled:hover {
  transform: none;
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.04) 0%, 
    rgba(255, 255, 255, 0.02) 100%);
  border-color: rgba(255, 255, 255, 0.1);
  color: rgba(var(--primary-color), 0.6);
  box-shadow: 
    0 2px 8px rgba(0, 0, 0, 0.04),
    inset 0 1px 0 rgba(255, 255, 255, 0.08);
}

.undo-btn:disabled::before {
  display: none;
}

/* Dark mode undo button styling */
.dark-mode .undo-btn {
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.08) 0%, 
    rgba(255, 255, 255, 0.03) 100%);
  border-color: rgba(255, 255, 255, 0.15);
  color: var(--dark-text);
  box-shadow: 
    0 4px 15px rgba(0, 0, 0, 0.25),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.dark-mode .undo-btn:hover {
  background: linear-gradient(135deg, 
    rgba(var(--tertiary-color-rgb), 0.2) 0%, 
    rgba(var(--tertiary-color-rgb), 0.1) 100%);
  border-color: rgba(var(--tertiary-color-rgb), 0.5);
  color: var(--tertiary-color);
  box-shadow: 
    0 8px 25px rgba(0, 0, 0, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.15);
}

.dark-mode .undo-btn:disabled {
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.02) 0%, 
    rgba(255, 255, 255, 0.01) 100%);
  border-color: rgba(255, 255, 255, 0.05);
  color: rgba(255, 255, 255, 0.4);
  box-shadow: 
    0 2px 8px rgba(0, 0, 0, 0.15),
    inset 0 1px 0 rgba(255, 255, 255, 0.03);
}

.dark-mode .undo-btn:disabled:hover {
  background: linear-gradient(135deg, 
    rgba(255, 255, 255, 0.02) 0%, 
    rgba(255, 255, 255, 0.01) 100%);
  border-color: rgba(255, 255, 255, 0.05);
  color: rgba(255, 255, 255, 0.4);
  box-shadow: 
    0 2px 8px rgba(0, 0, 0, 0.15),
    inset 0 1px 0 rgba(255, 255, 255, 0.03);
}

/* Mobile specific undo button adjustments are already handled in media queries */

/* Background gradient animation keyframes */
@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}